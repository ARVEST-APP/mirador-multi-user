/* eslint-disable */
export default async () => {
    const t = {
        ["./link-media-group/entities/link-media-group.entity"]: await import("./link-media-group/entities/link-media-group.entity"),
        ["./enum/rights"]: await import("./enum/rights"),
        ["./media/entities/media.entity"]: await import("./media/entities/media.entity"),
        ["./user-group/entities/user-group.entity"]: await import("./user-group/entities/user-group.entity"),
        ["./users/entities/user.entity"]: await import("./users/entities/user.entity"),
        ["./link-manifest-group/entities/link-manifest-group.entity"]: await import("./link-manifest-group/entities/link-manifest-group.entity"),
        ["./manifest/entities/manifest.entity"]: await import("./manifest/entities/manifest.entity"),
        ["./enum/user-group-types"]: await import("./enum/user-group-types"),
        ["./link-group-project/entities/link-group-project.entity"]: await import("./link-group-project/entities/link-group-project.entity"),
        ["./link-user-group/entities/link-user-group.entity"]: await import("./link-user-group/entities/link-user-group.entity"),
        ["./project/entities/project.entity"]: await import("./project/entities/project.entity"),
        ["./project/dto/create-project.dto"]: await import("./project/dto/create-project.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./media/entities/media.entity"), { "Media": { id: { required: true, type: () => Number }, path: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, idCreator: { required: true, type: () => Number }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date }, linkMediaGroup: { required: true, type: () => t["./link-media-group/entities/link-media-group.entity"].LinkMediaGroup } } }], [import("./link-media-group/entities/link-media-group.entity"), { "LinkMediaGroup": { id: { required: true, type: () => Number }, rights: { required: true, enum: t["./enum/rights"].MediaGroupRights }, media: { required: true, type: () => t["./media/entities/media.entity"].Media }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./link-user-group/entities/link-user-group.entity"), { "LinkUserGroup": { id: { required: true, type: () => Number }, rights: { required: true, enum: t["./enum/rights"].User_UserGroupRights }, user: { required: true, type: () => t["./users/entities/user.entity"].User }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./manifest/entities/manifest.entity"), { "Manifest": { id: { required: true, type: () => Number }, path: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, idCreator: { required: true, type: () => Number }, created_at: { required: true, type: () => Date }, updated_at: { required: true, type: () => Date }, linkManifestGroup: { required: true, type: () => t["./link-manifest-group/entities/link-manifest-group.entity"].LinkManifestGroup } } }], [import("./link-manifest-group/entities/link-manifest-group.entity"), { "LinkManifestGroup": { id: { required: true, type: () => Number }, rights: { required: true, enum: t["./enum/rights"].ManifestGroupRights }, manifest: { required: true, type: () => t["./manifest/entities/manifest.entity"].Manifest }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./user-group/entities/user-group.entity"), { "UserGroup": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, ownerId: { required: true, type: () => Number }, description: { required: true, type: () => String }, type: { required: true, enum: t["./enum/user-group-types"].UserGroupTypes }, linkGroupProjects: { required: true, type: () => [t["./link-group-project/entities/link-group-project.entity"].LinkGroupProject] }, linkMediaGroup: { required: true, type: () => t["./link-media-group/entities/link-media-group.entity"].LinkMediaGroup }, linkUserGroups: { required: true, type: () => [t["./link-user-group/entities/link-user-group.entity"].LinkUserGroup] }, linkManifestGroup: { required: true, type: () => [t["./link-manifest-group/entities/link-manifest-group.entity"].LinkManifestGroup] } } }], [import("./link-group-project/entities/link-group-project.entity"), { "LinkGroupProject": { id: { required: true, type: () => Number }, rights: { required: true, enum: t["./enum/rights"].GroupProjectRights }, project: { required: true, type: () => t["./project/entities/project.entity"].Project }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./project/entities/project.entity"), { "Project": { id: { required: true, type: () => Number }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, owner: { required: true, type: () => t["./users/entities/user.entity"].User }, userWorkspace: { required: true, type: () => Object }, created_at: { required: true, type: () => Date }, linkGroupProjectsIds: { required: true, type: () => [t["./link-group-project/entities/link-group-project.entity"].LinkGroupProject] } } }], [import("./users/entities/user.entity"), { "User": { id: { required: true, type: () => Number }, mail: { required: true, type: () => String }, name: { required: true, type: () => String }, password: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, projects: { required: true, type: () => [t["./project/entities/project.entity"].Project] }, linkUserGroups: { required: true, type: () => [t["./link-user-group/entities/link-user-group.entity"].LinkUserGroup] } } }], [import("./project/dto/create-project.dto"), { "CreateProjectDto": { name: { required: true, type: () => String }, userWorkspace: { required: true, type: () => Object }, owner: { required: true, type: () => t["./users/entities/user.entity"].User } } }], [import("./users/dto/create-user.dto"), { "CreateUserDto": { mail: { required: true, type: () => String }, name: { required: true, type: () => String }, password: { required: true, type: () => String }, Projects: { required: true, type: () => [t["./project/dto/create-project.dto"].CreateProjectDto] } } }], [import("./users/dto/update-user.dto"), { "UpdateUserDto": {} }], [import("./user-group/dto/create-user-group.dto"), { "CreateUserGroupDto": { name: { required: true, type: () => String }, ownerId: { required: true, type: () => Number }, users: { required: true, type: () => [t["./users/entities/user.entity"].User] } } }], [import("./link-user-group/dto/create-link-user-group.dto"), { "CreateLinkUserGroupDto": { rights: { required: true, enum: t["./enum/rights"].User_UserGroupRights }, user: { required: true, type: () => t["./users/entities/user.entity"].User }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./link-user-group/dto/update-link-user-group.dto"), { "UpdateLinkUserGroupDto": { groupId: { required: true, type: () => Number }, userId: { required: true, type: () => Number }, rights: { required: true, enum: t["./enum/rights"].User_UserGroupRights } } }], [import("./user-group/dto/update-user-group.dto"), { "UpdateUserGroupDto": { ownerId: { required: true, type: () => Number }, id: { required: true, type: () => Number }, rights: { required: true, enum: t["./enum/rights"].User_UserGroupRights } } }], [import("./auth/dto/login.dto"), { "loginDto": { mail: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./project/dto/update-project.dto"), { "UpdateProjectDto": { id: { required: true, type: () => Number } } }], [import("./link-group-project/dto/create-link-group-project.dto"), { "CreateLinkGroupProjectDto": { rights: { required: true, enum: t["./enum/rights"].GroupProjectRights }, project: { required: true, type: () => t["./project/entities/project.entity"].Project }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./link-group-project/dto/update-link-group-project.dto"), { "UpdateLinkGroupProjectDto": { rights: { required: true, enum: t["./enum/rights"].GroupProjectRights }, project: { required: true, type: () => t["./project/entities/project.entity"].Project }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./media/dto/create-media.dto"), { "CreateMediaDto": { path: { required: true, type: () => String }, idCreator: { required: true, type: () => Number }, name: { required: true, type: () => String }, description: { required: true, type: () => String }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./media/dto/update-media.dto"), { "UpdateMediaDto": { id: { required: true, type: () => Number } } }], [import("./link-media-group/dto/create-link-media-group.dto"), { "CreateLinkMediaGroupDto": { rights: { required: true, enum: t["./enum/rights"].MediaGroupRights }, media: { required: true, type: () => t["./media/entities/media.entity"].Media }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./link-media-group/dto/update-link-media-group.dto"), { "UpdateLinkMediaGroupDto": { rights: { required: true, enum: t["./enum/rights"].MediaGroupRights }, media: { required: true, type: () => t["./media/entities/media.entity"].Media }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./manifest/dto/create-manifest.dto"), { "CreateManifestDto": { path: { required: true, type: () => String }, idCreator: { required: true, type: () => Number }, name: { required: true, type: () => String }, description: { required: true, type: () => String } } }], [import("./manifest/dto/update-manifest.dto"), { "UpdateManifestDto": { id: { required: true, type: () => Number } } }], [import("./group-manifest/dto/create-group-manifest.dto"), { "CreateGroupManifestDto": { path: { required: true, type: () => String }, idCreator: { required: true, type: () => Number }, name: { required: true, type: () => String }, rights: { required: true, enum: t["./enum/rights"].ManifestGroupRights }, description: { required: true, type: () => String }, user_group: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup } } }], [import("./group-manifest/dto/add-manifest-to-group.dto"), { "AddManifestToGroupDto": { userGroup: { required: true, type: () => t["./user-group/entities/user-group.entity"].UserGroup }, manifestsId: { required: true, type: () => [Number] } } }], [import("./group-manifest/dto/update-group-manifest.dto"), { "UpdateGroupManifestDto": {} }], [import("./group-media/dto/create-group-media.dto"), { "CreateGroupMediaDto": {} }], [import("./group-media/dto/update-group-media.dto"), { "UpdateGroupMediaDto": { id: { required: true, type: () => Number } } }]], "controllers": [[import("./app.controller"), { "AppController": { "getHello": { type: String } } }], [import("./users/users.controller"), { "UsersController": { "create": { type: t["./users/entities/user.entity"].User }, "findOne": { type: t["./users/entities/user.entity"].User }, "update": { type: t["./users/entities/user.entity"].User }, "remove": {} } }], [import("./auth/auth.controller"), { "AuthController": { "signIn": {}, "getprofile": {} } }], [import("./project/project.controller"), { "ProjectController": { "create": {}, "findAll": { type: [t["./project/entities/project.entity"].Project] }, "findOne": { type: t["./project/entities/project.entity"].Project }, "update": { type: t["./project/entities/project.entity"].Project }, "lookingForProject": { type: [t["./project/entities/project.entity"].Project] }, "remove": {} } }], [import("./user-group/user-group.controller"), { "UserGroupController": { "create": { type: t["./user-group/entities/user-group.entity"].UserGroup }, "findOne": { type: t["./user-group/entities/user-group.entity"].UserGroup }, "findAll": { type: [t["./user-group/entities/user-group.entity"].UserGroup] }, "lookingForGroup": { type: [t["./user-group/entities/user-group.entity"].UserGroup] }, "updateGroup": { type: [t["./user-group/entities/user-group.entity"].UserGroup] }, "remove": {} } }], [import("./media/media.controller"), { "MediaController": { "findOne": { type: t["./media/entities/media.entity"].Media }, "findAll": { type: [t["./media/entities/media.entity"].Media] }, "update": { type: t["./media/entities/media.entity"].Media }, "remove": {}, "lookingForMedia": { type: [t["./media/entities/media.entity"].Media] } } }], [import("./link-media-group/link-media-group.controller"), { "LinkMediaGroupController": { "findAll": { type: [t["./link-media-group/entities/link-media-group.entity"].LinkMediaGroup] } } }],
                [import("./link-user-group/link-user-group.controller"), { "LinkUserGroupController": { "getAllUsersForGroup": { type: [t["./link-user-group/entities/link-user-group.entity"].LinkUserGroup] }, "getAllGroupForUser": { type: [Object] }, "getAccessToGroup": { type: t["./link-user-group/entities/link-user-group.entity"].LinkUserGroup }, "lookingForUser": { type: [t["./link-user-group/entities/link-user-group.entity"].LinkUserGroup] }, "lookingForUserGroups": { type: [t["./link-user-group/entities/link-user-group.entity"].LinkUserGroup] }, "getUserPersonalGroup": { type: t["./user-group/entities/user-group.entity"].UserGroup }, "grantAccess": { type: t["./link-user-group/entities/link-user-group.entity"].LinkUserGroup }, "changeAccess": { type: t["./link-user-group/entities/link-user-group.entity"].LinkUserGroup }, "removeAccess": {} } }], [import("./group-media/group-media.controller"), { "GroupMediaController": { "uploadSingleFile": { type: t["./link-media-group/entities/link-media-group.entity"].LinkMediaGroup }, "getMediaByUserGroupId": {}, "getMediaById": { type: [t["./link-media-group/entities/link-media-group.entity"].LinkMediaGroup] }, "deleteMedia": {}, "updateMedia": { type: t["./media/entities/media.entity"].Media }, "updateMediaGroupRelation": {}, "addMediaToGroup": { type: [Object] }, "deleteMediaById": {} } }], [import("./manifest/manifest.controller"), { "ManifestController": { "findAll": { type: String }, "findOne": { type: t["./manifest/entities/manifest.entity"].Manifest }, "update": { type: t["./manifest/entities/manifest.entity"].Manifest }, "remove": {}, "lookingForManifest": { type: [t["./manifest/entities/manifest.entity"].Manifest] } } }], [import("./group-manifest/group-manifest.controller"), { "GroupManifestController": { "uploadManifest": { type: Object }, "linkManifest": { type: Object }, "createManifest": { type: Object }, "getManifestByUserGroupId": { type: [t["./manifest/entities/manifest.entity"].Manifest] }, "getManifestById": { type: [t["./link-manifest-group/entities/link-manifest-group.entity"].LinkManifestGroup] }, "deleteManifest": {}, "updateManifest": { type: t["./manifest/entities/manifest.entity"].Manifest }, "updateManifestGroupRelation": {}, "addManifestToGroup": { type: [Object] }, "deleteManifestById": {} } }], [import("./link-manifest-group/link-manifest-group.controller"), { "LinkManifestGroupController": { "findAll": { type: [t["./link-manifest-group/entities/link-manifest-group.entity"].LinkManifestGroup] } } }]] } };
};